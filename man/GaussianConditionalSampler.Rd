% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FeatureSampler-GaussianConditionalSampler.R
\name{GaussianConditionalSampler}
\alias{GaussianConditionalSampler}
\title{Gaussian Conditional Sampler}
\description{
Implements conditional sampling assuming features follow a multivariate
Gaussian distribution. Computes conditional distributions analytically using standard
formulas for multivariate normal distributions.
}
\details{
For a joint Gaussian distribution \eqn{X \sim N(\mu, \Sigma)}, partitioned as
\eqn{X = (X_A, X_B)}, the conditional distribution is:

\deqn{X_B | X_A = x_A \sim N(\mu_{B|A}, \Sigma_{B|A})}

where:
\deqn{\mu_{B|A} = \mu_B + \Sigma_{BA} \Sigma_{AA}^{-1} (x_A - \mu_A)}
\deqn{\Sigma_{B|A} = \Sigma_{BB} - \Sigma_{BA} \Sigma_{AA}^{-1} \Sigma_{AB}}

This is equivalent to the regression formulation used by fippy:
\deqn{\beta = \Sigma_{BA} \Sigma_{AA}^{-1}}
\deqn{\mu_{B|A} = \mu_B + \beta (x_A - \mu_A)}
\deqn{\Sigma_{B|A} = \Sigma_{BB} - \beta \Sigma_{AB}}

\strong{Assumptions:}
\itemize{
\item Features are approximately multivariate normal
\item Only continuous features are supported
}

\strong{Advantages:}
\itemize{
\item Very fast (closed-form solution)
\item Deterministic (given seed)
\item No hyperparameters
\item Memory efficient
}

\strong{Limitations:}
\itemize{
\item Strong distributional assumption
\item May produce out-of-range values for bounded features
\item Cannot handle categorical features
}
}
\examples{
library(mlr3)
task = tgen("friedman1")$generate(n = 100)
sampler = GaussianConditionalSampler$new(task)

# Sample x2, x3 conditioned on x1
test_data = task$data(rows = 1:5)
sampled = sampler$sample_newdata(
  feature = c("important2", "important3"),
  newdata = test_data,
  conditioning_set = "important1"
)

}
\section{Super classes}{
\code{\link[xplainfi:FeatureSampler]{xplainfi::FeatureSampler}} -> \code{\link[xplainfi:ConditionalSampler]{xplainfi::ConditionalSampler}} -> \code{GaussianConditionalSampler}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{feature_types}}{(\code{character()}) Feature types supported by the sampler.}

\item{\code{mu}}{(\code{numeric()}) Mean vector estimated from training data.}

\item{\code{sigma}}{(\code{matrix()}) Covariance matrix estimated from training data.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GaussianConditionalSampler-new}{\code{GaussianConditionalSampler$new()}}
\item \href{#method-GaussianConditionalSampler-sample}{\code{GaussianConditionalSampler$sample()}}
\item \href{#method-GaussianConditionalSampler-sample_newdata}{\code{GaussianConditionalSampler$sample_newdata()}}
\item \href{#method-GaussianConditionalSampler-clone}{\code{GaussianConditionalSampler$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="xplainfi" data-topic="FeatureSampler" data-id="print"><a href='../../xplainfi/html/FeatureSampler.html#method-FeatureSampler-print'><code>xplainfi::FeatureSampler$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GaussianConditionalSampler-new"></a>}}
\if{latex}{\out{\hypertarget{method-GaussianConditionalSampler-new}{}}}
\subsection{Method \code{new()}}{
Creates a new GaussianConditionalSampler.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GaussianConditionalSampler$new(task)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{(\link[mlr3:Task]{mlr3::Task}) Task to sample from. Must have only numeric/integer features.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GaussianConditionalSampler-sample"></a>}}
\if{latex}{\out{\hypertarget{method-GaussianConditionalSampler-sample}{}}}
\subsection{Method \code{sample()}}{
Sample features from their conditional distribution using closed-form Gaussian formulas.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GaussianConditionalSampler$sample(
  feature,
  row_ids = NULL,
  conditioning_set = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{feature}}{(\code{character()}) Feature name(s) to sample.}

\item{\code{row_ids}}{(\code{integer()} | \code{NULL}) Row IDs from task to use as conditioning values.}

\item{\code{conditioning_set}}{(\code{character()} | \code{NULL}) Features to condition on.
If \code{NULL}, samples from marginal distribution (no conditioning).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Modified copy with sampled feature(s).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GaussianConditionalSampler-sample_newdata"></a>}}
\if{latex}{\out{\hypertarget{method-GaussianConditionalSampler-sample_newdata}{}}}
\subsection{Method \code{sample_newdata()}}{
Sample from external data conditionally.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GaussianConditionalSampler$sample_newdata(
  feature,
  newdata,
  conditioning_set = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{feature}}{(\code{character()}) Feature(s) to sample.}

\item{\code{newdata}}{(\code{\link[data.table:data.table]{data.table}}) External data to use.}

\item{\code{conditioning_set}}{(\code{character()} | \code{NULL}) Features to condition on.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Modified copy with sampled feature(s).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GaussianConditionalSampler-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GaussianConditionalSampler-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GaussianConditionalSampler$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
