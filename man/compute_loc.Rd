% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_loc.R
\name{compute_loc}
\alias{compute_loc}
\title{LOCO and LOCI workhorse}
\usage{
compute_loc(learner, task, train_ids, test_ids, features, measure, direction)
}
\arguments{
\item{learner}{(mlr3::Learner)}

\item{task}{(mlr3::Task)}

\item{train_ids, test_ids}{(integer()) Row IDs for train- and test splits.}

\item{features}{(character()) Feature names of interest.}

\item{direction}{(character(1)) Either \code{"leave-in"} or \code{"leave-out"}.}
}
\value{
A \link{data.table} with columns \code{feature} and \verb{<measure$id>_post}.
}
\description{
Computes either LOCO or LOCI depending on whether feature of interest
is designated to be left out (LOCO) or left in (LOCI)
}
\note{
These functions are used for internal computations and are likely not exported in the future.
}
\examples{
library(mlr3)

learner = lrn("classif.rpart")
task = tsk("breast_cancer")
measure = msr("classif.ce")
split = partition(task)
train_ids = split$train
test_ids = split$test
# Computing scores for all features
features = task$feature_names

# LOCO
compute_loc(
  learner,
  task,
  train_ids = split$train,
  test_ids = split$test,
  features,
  measure,
  direction = "leave-out"
)
# LOCI
compute_loc(
  learner,
  task,
  train_ids = split$train,
  test_ids = split$test,
  features,
  measure,
  direction = "leave-in"
)

}
\keyword{internal}
