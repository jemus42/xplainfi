% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FeatureSampler.R
\name{KnockoffSampler}
\alias{KnockoffSampler}
\title{Knockoff-based Conditional Sampler}
\description{
Implements conditional sampling using Knockoffs.
}
\details{
The KnockoffSampler samples \link[knockoff:knockoff]{Knockoffs} based on the task data.
}
\examples{
\dontshow{if (requireNamespace("knockoff", quietly = TRUE)) withAutoprint(\{ # examplesIf}
library(mlr3)
task = tgen("2dnormals")$generate(n = 100)
# Create sampler with default parameters
sampler = KnockoffSampler$new(task)
# Will use the stored parameters
sampled_data = sampler$sample("x1")
\dontrun{
# Example with sequential knockoffs (https://github.com/kormama1/seqknockoff)
task = tgen("simplex")$generate(n = 100)
sampler_seq = KnockoffSampler$new(task, knockoff_fun = seqknockoff::knockoffs_seq)
sampled_seq = sampler_seq$sample("x1")
}
\dontshow{\}) # examplesIf}
}
\references{
Watson D, Wright M (2021).
\dQuote{Testing conditional independence in supervised learning algorithms.}
\emph{Machine Learning}, \bold{110}(8), 2107-2129.
\doi{10.1007/s10994-021-06030-6}.

Blesch K, Watson D, Wright M (2023).
\dQuote{Conditional feature importance for mixed data.}
\emph{AStA Advances in Statistical Analysis}, \bold{108}(2), 259-278.
\doi{10.1007/s10182-023-00477-9}.
}
\section{Super classes}{
\code{\link[xplainfi:FeatureSampler]{xplainfi::FeatureSampler}} -> \code{\link[xplainfi:ConditionalSampler]{xplainfi::ConditionalSampler}} -> \code{KnockoffSampler}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{x_tilde}}{Knockoff matrix}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KnockoffSampler-new}{\code{KnockoffSampler$new()}}
\item \href{#method-KnockoffSampler-sample}{\code{KnockoffSampler$sample()}}
\item \href{#method-KnockoffSampler-clone}{\code{KnockoffSampler$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnockoffSampler-new"></a>}}
\if{latex}{\out{\hypertarget{method-KnockoffSampler-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of the KnockoffSampler class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnockoffSampler$new(
  task,
  knockoff_fun = function(x) knockoff::create.second_order(as.matrix(x))
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task}}{(\link[mlr3:Task]{mlr3::Task}) Task to sample from}

\item{\code{knockoff_fun}}{(\code{function}) Step size for variance adjustment. Default are second-order Gaussian knockoffs.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnockoffSampler-sample"></a>}}
\if{latex}{\out{\hypertarget{method-KnockoffSampler-sample}{}}}
\subsection{Method \code{sample()}}{
Sample values for feature(s) conditionally on other features using Knockoffs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnockoffSampler$sample(feature, data = self$task$data())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{feature}}{(\code{character}) Feature(s) of interest to sample (can be single or multiple)}

\item{\code{data}}{(\code{\link[data.table:data.table]{data.table}}) Data containing conditioning features. Defaults to \verb{$task$data()}, but typically a dedicated test set is provided. Currently \code{KnockoffSampler} does not support this, use \link{ARFSampler} instead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Modified copy of the input data with the feature(s) sampled conditionally
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnockoffSampler-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KnockoffSampler-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnockoffSampler$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
