[{"path":"https://jemus42.github.io/xplainfi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 xplainfi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://jemus42.github.io/xplainfi/articles/xplainfi.html","id":"simple-case-without-resampling","dir":"Articles","previous_headings":"PFI","what":"Simple case without resampling","title":"xplainfi","text":"Default behavior internally construct standard holdout resampling default ratio Calculating PFI: Q: $compute() run construction? call $new() $compute() ’s nothing needs happen technically, long relation param set directly. recompute needed: Recomputes param changes, stores new param Q: $compute() called default value \"relation\" (.e. \"difference\") used, doesn’t seem ideal. Maybe default param stored object rather feel like separate function. Retrieve scores convert DT:","code":"pfi = PFI$new(   task = task,   learner = learner,   measure = measure )  # Stores parameter set to calculate PFI in different ways pfi$param_set #> <ParamSet(2)> #>            id    class lower upper nlevels    default      value #>        <char>   <char> <num> <num>   <num>     <list>     <list> #> 1:   relation ParamFct    NA    NA       2 difference difference #> 2: iters_perm ParamInt     1   Inf     Inf          1          1  set.seed(123)  # Default behavior should be sane pfi$compute() #> Key: <feature> #>                     feature   importance #>                      <char>        <num> #>  1:                     age  0.009009009 #>  2:                  amount  0.015015015 #>  3:          credit_history  0.003003003 #>  4:                duration  0.021021021 #>  5:     employment_duration  0.000000000 #>  6:          foreign_worker  0.006006006 #>  7:                 housing  0.018018018 #>  8:        installment_rate  0.033033033 #>  9:                     job -0.009009009 #> 10:          number_credits  0.003003003 #> 11:           other_debtors -0.006006006 #> 12: other_installment_plans  0.003003003 #> 13:           people_liable -0.003003003 #> 14:     personal_status_sex  0.012012012 #> 15:       present_residence  0.000000000 #> 16:                property  0.006006006 #> 17:                 purpose -0.003003003 #> 18:                 savings  0.009009009 #> 19:                  status  0.036036036 #> 20:               telephone  0.009009009 #>                     feature   importance pfi$compute(relation = \"difference\") #> Key: <feature> #>                     feature   importance #>                      <char>        <num> #>  1:                     age  0.009009009 #>  2:                  amount  0.015015015 #>  3:          credit_history  0.003003003 #>  4:                duration  0.021021021 #>  5:     employment_duration  0.000000000 #>  6:          foreign_worker  0.006006006 #>  7:                 housing  0.018018018 #>  8:        installment_rate  0.033033033 #>  9:                     job -0.009009009 #> 10:          number_credits  0.003003003 #> 11:           other_debtors -0.006006006 #> 12: other_installment_plans  0.003003003 #> 13:           people_liable -0.003003003 #> 14:     personal_status_sex  0.012012012 #> 15:       present_residence  0.000000000 #> 16:                property  0.006006006 #> 17:                 purpose -0.003003003 #> 18:                 savings  0.009009009 #> 19:                  status  0.036036036 #> 20:               telephone  0.009009009 #>                     feature   importance pfi$compute(relation = \"ratio\") #> Key: <feature> #>                     feature importance #>                      <char>      <num> #>  1:                     age  1.0574713 #>  2:                  amount  1.0344828 #>  3:          credit_history  1.0919540 #>  4:                duration  1.0689655 #>  5:     employment_duration  1.0114943 #>  6:          foreign_worker  1.0000000 #>  7:                 housing  1.0344828 #>  8:        installment_rate  1.0459770 #>  9:                     job  0.9655172 #> 10:          number_credits  0.9655172 #> 11:           other_debtors  1.0114943 #> 12: other_installment_plans  1.0114943 #> 13:           people_liable  1.0229885 #> 14:     personal_status_sex  1.0229885 #> 15:       present_residence  1.0000000 #> 16:                property  1.0344828 #> 17:                 purpose  1.0114943 #> 18:                 savings  1.0344828 #> 19:                  status  1.1149425 #> 20:               telephone  1.0114943 #>                     feature importance pfi$param_set #> <ParamSet(2)> #>            id    class lower upper nlevels    default  value #>        <char>   <char> <num> <num>   <num>     <list> <list> #> 1:   relation ParamFct    NA    NA       2 difference  ratio #> 2: iters_perm ParamInt     1   Inf     Inf          1      1 pfi$compute() #> Key: <feature> #>                     feature   importance #>                      <char>        <num> #>  1:                     age  0.015015015 #>  2:                  amount -0.012012012 #>  3:          credit_history  0.000000000 #>  4:                duration  0.057057057 #>  5:     employment_duration -0.012012012 #>  6:          foreign_worker -0.003003003 #>  7:                 housing -0.003003003 #>  8:        installment_rate  0.009009009 #>  9:                     job -0.003003003 #> 10:          number_credits -0.006006006 #> 11:           other_debtors -0.006006006 #> 12: other_installment_plans -0.012012012 #> 13:           people_liable -0.006006006 #> 14:     personal_status_sex  0.006006006 #> 15:       present_residence -0.009009009 #> 16:                property -0.003003003 #> 17:                 purpose -0.024024024 #> 18:                 savings  0.027027027 #> 19:                  status  0.021021021 #> 20:               telephone -0.003003003 #>                     feature   importance pfi$importance #> Key: <feature> #>                     feature   importance #>                      <char>        <num> #>  1:                     age  0.015015015 #>  2:                  amount -0.012012012 #>  3:          credit_history  0.000000000 #>  4:                duration  0.057057057 #>  5:     employment_duration -0.012012012 #>  6:          foreign_worker -0.003003003 #>  7:                 housing -0.003003003 #>  8:        installment_rate  0.009009009 #>  9:                     job -0.003003003 #> 10:          number_credits -0.006006006 #> 11:           other_debtors -0.006006006 #> 12: other_installment_plans -0.012012012 #> 13:           people_liable -0.006006006 #> 14:     personal_status_sex  0.006006006 #> 15:       present_residence -0.009009009 #> 16:                property -0.003003003 #> 17:                 purpose -0.024024024 #> 18:                 savings  0.027027027 #> 19:                  status  0.021021021 #> 20:               telephone -0.003003003 #>                     feature   importance as.data.table(pfi) #> Warning in as.data.table.FeatureImportanceLearner(pfi): No importance scores #> found. Did you $compute()? #> Empty data.table (0 rows and 2 cols): feature,importance"},{"path":"https://jemus42.github.io/xplainfi/articles/xplainfi.html","id":"with-resampling","dir":"Articles","previous_headings":"PFI","what":"With resampling","title":"xplainfi","text":"Different measure: Q: Maybe worth allowing change measure post-hoc? Q: Results importance scores averaged resampling iterations ensure “named numeric” return format. individual scores across resampling iterations? want attempt uncertainty quantification least also report SDs needs data.table return type.","code":"learner = lrn(\"classif.ranger\", num.trees = 100) resampling = rsmp(\"cv\", folds = 3) measure = msr(\"classif.ce\")  pfi = PFI$new(   task = task,   learner = learner,   resampling = resampling,   measure = measure )  pfi$resampling #> <ResamplingCV>: Cross-Validation #> * Iterations: 3 #> * Instantiated: TRUE #> * Parameters: folds=3 pfi$resample_result #> NULL  pfi$compute(relation = \"difference\") #> Key: <feature> #>                     feature  importance #>                      <char>       <num> #>  1:                     age 0.004996014 #>  2:                  amount 0.016007025 #>  3:          credit_history 0.028004052 #>  4:                duration 0.021995049 #>  5:     employment_duration 0.004004004 #>  6:          foreign_worker 0.001001001 #>  7:                 housing 0.007993023 #>  8:        installment_rate 0.013990038 #>  9:                     job 0.003000006 #> 10:          number_credits 0.000000000 #> 11:           other_debtors 0.003995013 #> 12: other_installment_plans 0.009998022 #> 13:           people_liable 0.001996008 #> 14:     personal_status_sex 0.003998010 #> 15:       present_residence 0.005997015 #> 16:                property 0.012989037 #> 17:                 purpose 0.011002020 #> 18:                 savings 0.027989067 #> 19:                  status 0.042995091 #> 20:               telephone 0.007004010 #>                     feature  importance  pfi$resample_result #> <ResampleResult> with 3 resampling iterations #>        task_id     learner_id resampling_id iteration     prediction_test #>  german_credit classif.ranger            cv         1 <PredictionClassif> #>  german_credit classif.ranger            cv         2 <PredictionClassif> #>  german_credit classif.ranger            cv         3 <PredictionClassif> #>  warnings errors #>         0      0 #>         0      0 #>         0      0  pfi$importance #> Key: <feature> #>                     feature  importance #>                      <char>       <num> #>  1:                     age 0.004996014 #>  2:                  amount 0.016007025 #>  3:          credit_history 0.028004052 #>  4:                duration 0.021995049 #>  5:     employment_duration 0.004004004 #>  6:          foreign_worker 0.001001001 #>  7:                 housing 0.007993023 #>  8:        installment_rate 0.013990038 #>  9:                     job 0.003000006 #> 10:          number_credits 0.000000000 #> 11:           other_debtors 0.003995013 #> 12: other_installment_plans 0.009998022 #> 13:           people_liable 0.001996008 #> 14:     personal_status_sex 0.003998010 #> 15:       present_residence 0.005997015 #> 16:                property 0.012989037 #> 17:                 purpose 0.011002020 #> 18:                 savings 0.027989067 #> 19:                  status 0.042995091 #> 20:               telephone 0.007004010 #>                     feature  importance learner$predict_type = \"prob\"  pfi = PFI$new(   task = task,   learner = learner,   resampling = resampling,   measure = msr(\"classif.auc\") )  pfi$compute(relation = \"ratio\") #> Key: <feature> #>                     feature importance #>                      <char>      <num> #>  1:                     age  1.0119854 #>  2:                  amount  1.0182071 #>  3:          credit_history  1.0261672 #>  4:                duration  1.0391916 #>  5:     employment_duration  1.0176308 #>  6:          foreign_worker  1.0006448 #>  7:                 housing  1.0050683 #>  8:        installment_rate  0.9996105 #>  9:                     job  0.9996705 #> 10:          number_credits  1.0012332 #> 11:           other_debtors  1.0040648 #> 12: other_installment_plans  1.0097691 #> 13:           people_liable  0.9996198 #> 14:     personal_status_sex  1.0010624 #> 15:       present_residence  0.9972150 #> 16:                property  1.0104244 #> 17:                 purpose  1.0087439 #> 18:                 savings  1.0273154 #> 19:                  status  1.1509158 #> 20:               telephone  1.0025541 #>                     feature importance pfi$compute(relation = \"difference\") #> Key: <feature> #>                     feature    importance #>                      <char>         <num> #>  1:                     age  1.219438e-02 #>  2:                  amount  7.990804e-04 #>  3:          credit_history  1.942118e-02 #>  4:                duration  3.469820e-02 #>  5:     employment_duration  7.473255e-03 #>  6:          foreign_worker  6.846385e-04 #>  7:                 housing  2.851689e-03 #>  8:        installment_rate  3.310377e-03 #>  9:                     job -4.428262e-04 #> 10:          number_credits -1.266753e-03 #> 11:           other_debtors  6.770134e-03 #> 12: other_installment_plans  8.964666e-03 #> 13:           people_liable  1.633042e-03 #> 14:     personal_status_sex  2.295840e-03 #> 15:       present_residence  6.110152e-05 #> 16:                property  1.331438e-03 #> 17:                 purpose  4.640028e-03 #> 18:                 savings  7.728800e-03 #> 19:                  status  1.171140e-01 #> 20:               telephone  2.073551e-03 #>                     feature    importance"},{"path":"https://jemus42.github.io/xplainfi/articles/xplainfi.html","id":"with-multiple-permutation-iterations","dir":"Articles","previous_headings":"PFI","what":"With multiple permutation iterations","title":"xplainfi","text":"","code":"pfi = PFI$new(   task = task,   learner = learner,   resampling = resampling,   measure = msr(\"classif.ce\"),   iters_perm = 5 # permute each feature 5 times in each resampling iteration )  pfi$compute() #> Key: <feature> #>                     feature    importance #>                      <char>         <num> #>  1:                     age -2.997009e-06 #>  2:                  amount  1.379643e-02 #>  3:          credit_history  1.678625e-02 #>  4:                duration  2.720145e-02 #>  5:     employment_duration  6.389024e-03 #>  6:          foreign_worker  4.004004e-04 #>  7:                 housing  1.924080e-04 #>  8:        installment_rate  9.191827e-03 #>  9:                     job  1.393609e-03 #> 10:          number_credits -2.043960e-04 #> 11:           other_debtors  6.600613e-03 #> 12: other_installment_plans  1.190412e-03 #> 13:           people_liable  2.601404e-03 #> 14:     personal_status_sex -3.007798e-03 #> 15:       present_residence -1.802401e-03 #> 16:                property  7.930086e-04 #> 17:                 purpose  4.795214e-03 #> 18:                 savings  1.160262e-02 #> 19:                  status  4.579550e-02 #> 20:               telephone  1.002200e-03 #>                     feature    importance"},{"path":"https://jemus42.github.io/xplainfi/articles/xplainfi.html","id":"loco","dir":"Articles","previous_headings":"","what":"LOCO","title":"xplainfi","text":"setup now using LOCO, differs internally needs refit model. Notably, Task object need modified, suffices adjust .$col_roles$feature property.","code":"learner = lrn(\"classif.ranger\", num.trees = 100)  loco = LOCO$new(   task = task,   learner = learner,   resampling = resampling,   measure = msr(\"classif.ce\") )  loco$compute() #>                     age                  amount          credit_history  #>            3.977031e-03            4.001007e-03            2.982024e-03  #>                duration     employment_duration          foreign_worker  #>           -1.003998e-03            2.982024e-03            6.986028e-03  #>                 housing        installment_rate                     job  #>           -3.014991e-03           -5.005005e-03           -7.024989e-03  #>          number_credits           other_debtors other_installment_plans  #>           -7.015998e-03           -3.596411e-05           -9.023994e-03  #>           people_liable     personal_status_sex       present_residence  #>            9.830189e-04           -2.022981e-03            9.770249e-04  #>                property                 purpose                 savings  #>           -8.019996e-03            1.981023e-03            2.994012e-03  #>                  status               telephone  #>            1.899504e-02           -3.008997e-03"},{"path":"https://jemus42.github.io/xplainfi/articles/xplainfi.html","id":"aggregating-results","dir":"Articles","previous_headings":"","what":"Aggregating results","title":"xplainfi","text":"Importance scores (ratio)","code":"scores_rel = data.table(   feature = task$feature_names,   PFI = pfi$compute(relation = \"ratio\"),   LOCO = loco$compute(relation = \"ratio\") )  scores_rel |>   knitr::kable(digits = 4, caption = \"Importance scores (ratio)\") library(ggplot2)  scores_rel |>   data.table::melt(id.vars = \"feature\", value.name = \"score\", variable.name = \"method\") |>   ggplot(aes(x = score, y = feature, color = method, fill = method)) +   geom_col(position = \"dodge\", alpha = .5) +   scale_color_brewer(palette = \"Dark2\", aesthetics = c(\"color\", \"fill\")) +   labs(     title = \"Feature Importance Scores\",     subtitle = sprintf(\"For task %s and measure %s, using relativ scores\", task$id, measure$id),     x = \"Score\", y = \"Feature\", color = \"Method\", fill = \"Method\",     caption = sprintf(\"Using %i-fold $s\", resampling$iters, resampling$id)   ) +   theme(     legend.position = \"bottom\",     plot.title.position = \"plot\"   ) #> Warning in melt.data.table(scores_rel, id.vars = \"feature\", value.name = #> \"score\", : 'measure.vars' [PFI.feature, PFI.importance, LOCO] are not all of #> the same type. By order of hierarchy, the molten data value column will be of #> type 'character'. All measure variables not of type 'character' will be coerced #> too. Check DETAILS in ?melt.data.table for more on coercion. #> Warning in sprintf(\"Using %i-fold $s\", resampling$iters, resampling$id): one #> argument not used by format 'Using %i-fold $s'"},{"path":"https://jemus42.github.io/xplainfi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lukas Burk. Author, maintainer.","code":""},{"path":"https://jemus42.github.io/xplainfi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burk L (2024). xplainfi: Feature Importance Methods Model Interpretability. R package version 0.0.0.9000, https://github.com/jemus42/xplainfi, https://jemus42.github.io/xplainfi/.","code":"@Manual{,   title = {xplainfi: Feature Importance Methods for Model Interpretability},   author = {Lukas Burk},   year = {2024},   note = {R package version 0.0.0.9000,     https://github.com/jemus42/xplainfi},   url = {https://jemus42.github.io/xplainfi/}, }"},{"path":"https://jemus42.github.io/xplainfi/index.html","id":"xplainfi","dir":"","previous_headings":"","what":"Feature Importance Methods for Model Interpretability","title":"Feature Importance Methods for Model Interpretability","text":"goal xplainfi collect common feature importance methods unified extensible interface. now, built specifically around mlr3, available abstractions learners, tasks, measures, etc. greatly simplify implementation importance measures.","code":""},{"path":"https://jemus42.github.io/xplainfi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Feature Importance Methods for Model Interpretability","text":"can install development version xplainfi like :","code":"# install.packages(pak) pak::pak(\"jemus42/xplainfi\")"},{"path":"https://jemus42.github.io/xplainfi/index.html","id":"example-pfi","dir":"","previous_headings":"","what":"Example: PFI","title":"Feature Importance Methods for Model Interpretability","text":"basic example calculate PFI given learner task, using repeated cross-validation resampling strategy computing PFI within resampling 5 times: Compute print PFI scores: Retrieve scores later pfi$importance. PFI computed based resampling multiple iterations, / multiple permutation iterations, individual scores can retrieved data.table: iter_rsmp corresponds resampling iteration, .e., 3 * 2 = 6 2 repeats 3-fold cross-validation, iter_perm corresponds permutation iteration, 5 case. pfi$importance contains means across iterations, pfi$scores allows manually aggregate way see fit. simplest case, run PFI single resampling iteration (holdout) single permutation iteration, pfi$importance contain values pfi$scores.","code":"library(xplainfi) library(mlr3) library(mlr3learners)  task = tsk(\"german_credit\") learner = lrn(\"classif.ranger\", num.trees = 100) measure = msr(\"classif.ce\")  pfi = PFI$new(   task = task,   learner = learner,   measure = measure,   resampling = rsmp(\"repeated_cv\", folds = 3, repeats = 2),   iters_perm = 5 ) pfi$compute() #> Key: <feature> #>                     feature    importance #>                      <char>         <num> #>  1:                     age  9.929091e-04 #>  2:                  amount  1.288294e-02 #>  3:          credit_history  1.218554e-02 #>  4:                duration  1.598605e-02 #>  5:     employment_duration  3.890717e-03 #>  6:          foreign_worker -1.202700e-03 #>  7:                 housing -8.016999e-04 #>  8:        installment_rate  3.599408e-03 #>  9:                     job -1.002799e-03 #> 10:          number_credits -2.402103e-03 #> 11:           other_debtors  5.898713e-03 #> 12: other_installment_plans -9.095922e-04 #> 13:           people_liable  5.994018e-07 #> 14:     personal_status_sex -1.807496e-03 #> 15:       present_residence  6.944070e-04 #> 16:                property  1.291111e-03 #> 17:                 purpose  2.486918e-03 #> 18:                 savings  1.819694e-02 #> 19:                  status  3.978829e-02 #> 20:               telephone  1.293209e-03 #>                     feature    importance pfi$scores #> Key: <feature, iter_rsmp, iter_perm> #>      iter_rsmp   feature iter_perm classif.ce_perm classif.ce_orig   importance #>          <int>    <char>     <int>           <num>           <num>        <num> #>   1:         1       age         1       0.2305389       0.2095808  0.020958084 #>   2:         1       age         2       0.2335329       0.2095808  0.023952096 #>   3:         1       age         3       0.2275449       0.2095808  0.017964072 #>   4:         1       age         4       0.2215569       0.2095808  0.011976048 #>   5:         1       age         5       0.2155689       0.2095808  0.005988024 #>  ---                                                                            #> 596:         6 telephone         1       0.2432432       0.2612613 -0.018018018 #> 597:         6 telephone         2       0.2552553       0.2612613 -0.006006006 #> 598:         6 telephone         3       0.2612613       0.2612613  0.000000000 #> 599:         6 telephone         4       0.2522523       0.2612613 -0.009009009 #> 600:         6 telephone         5       0.2402402       0.2612613 -0.021021021 pfi_single = PFI$new(   task = task,   learner = learner,   measure = measure )  pfi_single$compute() #> Key: <feature> #>                     feature   importance #>                      <char>        <num> #>  1:                     age  0.003003003 #>  2:                  amount  0.012012012 #>  3:          credit_history  0.024024024 #>  4:                duration  0.012012012 #>  5:     employment_duration  0.006006006 #>  6:          foreign_worker  0.000000000 #>  7:                 housing  0.006006006 #>  8:        installment_rate  0.024024024 #>  9:                     job -0.003003003 #> 10:          number_credits -0.003003003 #> 11:           other_debtors  0.012012012 #> 12: other_installment_plans  0.006006006 #> 13:           people_liable  0.009009009 #> 14:     personal_status_sex  0.003003003 #> 15:       present_residence  0.006006006 #> 16:                property  0.003003003 #> 17:                 purpose  0.015015015 #> 18:                 savings  0.003003003 #> 19:                  status  0.054054054 #> 20:               telephone -0.003003003 #>                     feature   importance pfi_single$scores #> Key: <feature, iter_rsmp, iter_perm> #>     iter_rsmp                 feature iter_perm classif.ce_perm classif.ce_orig #>         <int>                  <char>     <int>           <num>           <num> #>  1:         1                     age         1       0.2762763       0.2732733 #>  2:         1                  amount         1       0.2852853       0.2732733 #>  3:         1          credit_history         1       0.2972973       0.2732733 #>  4:         1                duration         1       0.2852853       0.2732733 #>  5:         1     employment_duration         1       0.2792793       0.2732733 #>  6:         1          foreign_worker         1       0.2732733       0.2732733 #>  7:         1                 housing         1       0.2792793       0.2732733 #>  8:         1        installment_rate         1       0.2972973       0.2732733 #>  9:         1                     job         1       0.2702703       0.2732733 #> 10:         1          number_credits         1       0.2702703       0.2732733 #> 11:         1           other_debtors         1       0.2852853       0.2732733 #> 12:         1 other_installment_plans         1       0.2792793       0.2732733 #> 13:         1           people_liable         1       0.2822823       0.2732733 #> 14:         1     personal_status_sex         1       0.2762763       0.2732733 #> 15:         1       present_residence         1       0.2792793       0.2732733 #>       importance #>            <num> #>  1:  0.003003003 #>  2:  0.012012012 #>  3:  0.024024024 #>  4:  0.012012012 #>  5:  0.006006006 #>  6:  0.000000000 #>  7:  0.006006006 #>  8:  0.024024024 #>  9: -0.003003003 #> 10: -0.003003003 #> 11:  0.012012012 #> 12:  0.006006006 #> 13:  0.009009009 #> 14:  0.003003003 #> 15:  0.006006006 #>  [ reached getOption(\"max.print\") -- omitted 6 rows ]"},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Importance Learner Class — FeatureImportanceLearner","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"Feature Importance Learner Class Feature Importance Learner Class","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"label (character(1)) Method label task (mlr3::Task) learner (mlr3::Learner) measure (mlr3::Measure) resampling (mlr3::Resampling) resample_result (mlr3::ResampleResult) features (list()) param_set (paradox::ps()) importance (data.table::data.table()) Aggregated importance scores scores (data.table::data.table()) Individual performance scores used compute $importance","code":""},{"path":[]},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"FeatureImportanceLearner$new() FeatureImportanceLearner$print() FeatureImportanceLearner$clone()","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"Creates new instance R6 class. typically intended use derived classes.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"","code":"FeatureImportanceLearner$new(   task,   learner,   measure,   resampling = NULL,   features = NULL,   param_set = paradox::ps(),   label )"},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"task, learner, measure, resampling, features, param_set, label Used set fields","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"Print importance scores","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"","code":"FeatureImportanceLearner$print(...)"},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"... Passed print()","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"objects class cloneable method.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"","code":"FeatureImportanceLearner$clone(deep = FALSE)"},{"path":"https://jemus42.github.io/xplainfi/reference/FeatureImportanceLearner.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Importance Learner Class — FeatureImportanceLearner","text":"deep Whether make deep clone.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":null,"dir":"Reference","previous_headings":"","what":"LOCO Class — LOCO","title":"LOCO Class — LOCO","text":"LOCO Class LOCO Class","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LOCO Class — LOCO","text":"Calculates Leave-One-Covariate-(LOCO) scores.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"LOCO Class — LOCO","text":"xplainfi::FeatureImportanceLearner -> LOCO","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"LOCO Class — LOCO","text":"xplainfi::FeatureImportanceLearner$print()","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"LOCO Class — LOCO","text":"LOCO$new() LOCO$compute() LOCO$clone()","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"LOCO Class — LOCO","text":"Creates new instance R6 class.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LOCO Class — LOCO","text":"","code":"LOCO$new(task, learner, measure, resampling = NULL, features = NULL)"},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LOCO Class — LOCO","text":"task, learner, measure, resampling, features Passed FeatureImportanceLearner construction.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"method-compute-","dir":"Reference","previous_headings":"","what":"Method compute()","title":"LOCO Class — LOCO","text":"short description...","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"LOCO Class — LOCO","text":"","code":"LOCO$compute(relation = c(\"difference\", \"ratio\"))"},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"LOCO Class — LOCO","text":"relation (character(1)) Calculate \"difference\" (default) \"ratio\" original scores scores permutation","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"LOCO Class — LOCO","text":"objects class cloneable method.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"LOCO Class — LOCO","text":"","code":"LOCO$clone(deep = FALSE)"},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"LOCO Class — LOCO","text":"deep Whether make deep clone.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/LOCO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LOCO Class — LOCO","text":"","code":"library(mlr3)  loco = LOCO$new(   task = tsk(\"zoo\"),   learner = lrn(\"classif.rpart\"),   measure = msr(\"classif.ce\") )  loco$compute() #> airborne  aquatic backbone breathes  catsize domestic     eggs feathers  #>        0        0        0        0        0        0        0        0  #>     fins     hair     legs     milk predator     tail  toothed venomous  #>        0        0        0        0        0        0        0        0"},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":null,"dir":"Reference","previous_headings":"","what":"PFI Class — PFI","title":"PFI Class — PFI","text":"PFI Class PFI Class","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PFI Class — PFI","text":"Calculates Permutation Feature Importance (PFI) scores.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PFI Class — PFI","text":"xplainfi::FeatureImportanceLearner -> PFI","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"PFI Class — PFI","text":"xplainfi::FeatureImportanceLearner$print()","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PFI Class — PFI","text":"PFI$new() PFI$compute() PFI$clone()","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PFI Class — PFI","text":"Creates new instance R6 class.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PFI Class — PFI","text":"","code":"PFI$new(   task,   learner,   measure,   resampling = NULL,   features = NULL,   iters_perm = 1L )"},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PFI Class — PFI","text":"task, learner, measure, resampling, features Passed FeatureImportanceLearner construction. iters_perm (integer(1): 1L) Number permutations compute feature. Permutations repeated within resampling fold.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"method-compute-","dir":"Reference","previous_headings":"","what":"Method compute()","title":"PFI Class — PFI","text":"short description...","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PFI Class — PFI","text":"","code":"PFI$compute(relation = c(\"difference\", \"ratio\"), store_backends = TRUE)"},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PFI Class — PFI","text":"relation (character(1)) Calculate \"difference\" (default) \"ratio\" original scores scores permutation store_backends (logical(1): TRUE) Passed mlr3::resample() store backends resample result. Required measures, may increase memory footprint.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PFI Class — PFI","text":"objects class cloneable method.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PFI Class — PFI","text":"","code":"PFI$clone(deep = FALSE)"},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PFI Class — PFI","text":"deep Whether make deep clone.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/PFI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PFI Class — PFI","text":"","code":"library(mlr3)  pfi = PFI$new(   task = tsk(\"zoo\"),   learner = lrn(\"classif.rpart\"),   measure = msr(\"classif.ce\") )  pfi$compute() #> Key: <feature> #>      feature importance #>       <char>      <num> #>  1: airborne 0.00000000 #>  2:  aquatic 0.00000000 #>  3: backbone 0.00000000 #>  4: breathes 0.00000000 #>  5:  catsize 0.00000000 #>  6: domestic 0.00000000 #>  7:     eggs 0.00000000 #>  8: feathers 0.14705882 #>  9:     fins 0.08823529 #> 10:     hair 0.00000000 #> 11:     legs 0.00000000 #> 12:     milk 0.47058824 #> 13: predator 0.00000000 #> 14:     tail 0.00000000 #> 15:  toothed 0.00000000 #> 16: venomous 0.00000000"},{"path":"https://jemus42.github.io/xplainfi/reference/compute_score_relation.html","id":null,"dir":"Reference","previous_headings":"","what":"Scoring utility — compute_score_relation","title":"Scoring utility — compute_score_relation","text":"Computes relation score change (e.g. permutation, LOCO, ...) .","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/compute_score_relation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scoring utility — compute_score_relation","text":"","code":"compute_score_relation(   scores_pre,   scores_post,   relation = \"difference\",   minimize = TRUE )"},{"path":"https://jemus42.github.io/xplainfi/reference/compute_score_relation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scoring utility — compute_score_relation","text":"scores_pre (numeric()) Score change. scores_post (numeric()) Score change. relation (character(1), \"difference\") Either \"difference\" \"ratio\". minimize (logical(1), TRUE) Whether score needs minimized (e.g. RMSE) maximized (e.g. AUC).","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/compute_score_relation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scoring utility — compute_score_relation","text":"numeric vector length scores_pre scores_post","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/compute_score_relation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scoring utility — compute_score_relation","text":"minimize == TRUE, scores_post - scores_pre computed relation == \"difference\", otherwise scores_pre - scores_post given.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/compute_score_relation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scoring utility — compute_score_relation","text":"","code":"pre = rnorm(10) post = pre + runif(10)  compute_score_relation(pre, post) #>  [1] 0.72830566 0.41247286 0.15922928 0.84570355 0.88436910 0.39599811 #>  [7] 0.03814079 0.95139597 0.78372752 0.21943974 compute_score_relation(pre, post, \"ratio\") #>  [1] 2.13429016 0.01163002 0.86916936 1.39660369 0.18826730 4.39943753 #>  [7] 1.03024210 1.91425802 0.19157035 1.56162023 compute_score_relation(pre, post, minimize = FALSE) #>  [1] -0.72830566 -0.41247286 -0.15922928 -0.84570355 -0.88436910 -0.39599811 #>  [7] -0.03814079 -0.95139597 -0.78372752 -0.21943974"},{"path":"https://jemus42.github.io/xplainfi/reference/op-null-default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for NULL — op-null-default","title":"Default value for NULL — op-null-default","text":"backport %||% available R versions 4.4.0.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/op-null-default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default value for NULL — op-null-default","text":"","code":"x %||% y"},{"path":"https://jemus42.github.io/xplainfi/reference/op-null-default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default value for NULL — op-null-default","text":"x, y x NULL length 0, return y; otherwise returns x.","code":""},{"path":"https://jemus42.github.io/xplainfi/reference/op-null-default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default value for NULL — op-null-default","text":"","code":"1 %||% 2 #> [1] 1 NULL %||% 2 #> [1] 2"},{"path":"https://jemus42.github.io/xplainfi/reference/xplainfi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"xplainfi: Feature Importance Methods for Model Interpretability — xplainfi-package","title":"xplainfi: Feature Importance Methods for Model Interpretability — xplainfi-package","text":"Provides consistent interface common feature importance methods, permutation feature importance, 'LOCO', 'SAGE'.","code":""},{"path":[]},{"path":"https://jemus42.github.io/xplainfi/reference/xplainfi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xplainfi: Feature Importance Methods for Model Interpretability — xplainfi-package","text":"Maintainer: Lukas Burk github@quantenbrot.de (ORCID)","code":""},{"path":"https://jemus42.github.io/xplainfi/news/index.html","id":"xplainfi-0009000-development-version","dir":"Changelog","previous_headings":"","what":"xplainfi 0.0.0.9000 (development version)","title":"xplainfi 0.0.0.9000 (development version)","text":"Initial design phase.","code":""}]
